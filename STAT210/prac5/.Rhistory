options(digits = 3, show.signif.stars = FALSE)
coral <- read.table('coral.txt',header = TRUE)
attach(coral)
mod <- lm(bleach~temperature)
plot(mod)
plot(mod)
mod2 <- glm(bleach~temperature)
plot(mod2)
anova(mod2)
anova(mod)
load('Rfunctions.r')
source('Rfunctions.r')
mod.glm <- glm(bleach~temperature, family=binomial)
plot(mod)
rm(mod2)
anova(mod)
anova(mod,test="Chisq")
plot(temperature,bleach)
# Test model goodness of fit
anova(mod,test="Chisq")
summary(mod)
# Test model goodness of fit
anova(mod.glm,test="Chisq")
pchisq(18.8,18)
pchisq(18.8,df=18)
summary(mod.glm)
rm(mod)
# Test model goodness of fit
anova(mod.glm,test="Chisq")
summary(mod.glm)
betaCI(mod.glm)
help(predict)
# Predict when temperature is 30
predict(c(30), mod.glm)
# Predict when temperature is 30
predict(c(30.0,0), mod.glm)
# Predict when temperature is 30
predict(30.0, mod.glm)
# Predict when temperature is 30
predict(c(30.0,), mod.glm)
# Predict when temperature is 30
predict(c(30.0,null), mod.glm)
# Predict when temperature is 30
predict(30.0)
# Predict when temperature is 30
predict(c(30.0,2),mod.glm)
# Predict when temperature is 30
predict(mod.glm, newdata = data.frame(temperature=30), type = "response")
# Predict when temperature is 30
predict(mod.glm, newdata = data.frame(bleach=30), type = "response")
# Predict when temperature is 30
predict(mod.glm, newdata = data.frame(bleach=30), type = "predictor")
# Predict when temperature is 30
predict(mod.glm, newdata = data.frame(bleach=30), type = "terms")
# Predict when temperature is 30
predict(mod.glm, newdata = data.frame(bleach=30), type = "link")
# Predict when temperature is 30
predict(mod.glm, newdata = data.frame(temperature=30), type = "response")
# Check regression coefficient significance
summary(mod.glm)
# Predict when temperature is 30
predict(mod.glm, newdata = data.frame(temperature=40), type = "response")
# Predict when temperature is 30
predict(mod.glm, newdata = data.frame(temperature=20), type = "response")
# Predict when temperature is 30
predict(mod.glm, newdata = data.frame(temperature=50), type = "response")
# Plot the data
plot(temperature,bleach)
plot(temperature,bleach)
curve(predict(mod.glm,data.frame(temperature=x),type="response"),add=TRUE)
# Here you can see it's very unprobable that bleaching will occure in temperatures below 26, but very
# probable with temperatures above 32.
points(temperature,mod.glm$fitted,pch=20)
detach(coral)
# Question 2
UCLAadm <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
View(UCLAadm)
attach(UCLAadm)
UCLAadm$admit <-factor(UCLAadm$admit)
UCLAadm$rank <- factor(UCLAadm$rank)
plot(rank~gre)
plot(rank~gpa)
plot(admit~gre)
plot(admit~gpa)
attach(UCLAadm)
# Question 2
UCLAadm <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
attach(UCLAadm)
rm(UCLAadm)
# Question 2
UCLAadm <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
attach(UCLAadm)
plot(admit~gre)
plot(admit~gpa)
UCLAadm$rank <- factor(UCLAadm$rank)
plot(admit~gre)
plot(admit~gpa)
detach(UCLAadm)
# Question 2
UCLAadm <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
attach(UCLAadm)
rm(UCLAadm)
detach(UCLAadm)
rm(UCLAadm)
# Question 2
UCLAadm <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
attach(UCLAadm)
plot(gre,admit)
plot(gpa,admit)
gre.glm <- glm(admit~gre, family=binomial)
curve(predict(gre.glm,data.frame(gre=x),type="resp"),add=TRUE)
UCLAadm$admit <- UCLAadm$admit
curve(predict(gre.glm,data.frame(gre=x),type="resp"),add=TRUE)
plot(gpa,admit)
curve(predict(gre.glm,data.frame(gre=x),type="resp"),add=TRUE)
gre.glm <- glm(admit~gre, family=binomial)
curve(predict(gre.glm,data.frame(gre=x),type="resp"),add=TRUE)
gpa.glm <- glm(admit~gpa, family=binomial)
rm(gpa.glm,gre.glm,UCLAadm)
# Access the dataset from a web location
UCLAadm <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
# One of the qualitative predictors needs to be declared as a factor
# Convert that variable  to a factor.
# In the code below you need to replace ... with the name of your dataframe.
# and replace xxx with the name of the variable
rank$xxx <- factor(rank$xxx)
# One of the qualitative predictors needs to be declared as a factor
# Convert that variable  to a factor.
# In the code below you need to replace ... with the name of your dataframe.
# and replace xxx with the name of the variable
UCLAadm$rank <- factor(UCLAadm$rank)
attach(UCLAadm)
# Plot the data - in this case for gre.
plot(gre,admit, xlab="gre",ylab="Probability of admission")
detach(UCLAadm)
attach(UCLAadm)
# Plot the data - in this case for gre.
plot(gre,admit, xlab="gre",ylab="Probability of admission")
gre.glm=glm(admit~gre,family=binomial,UCLAadm)
curve(predict(gre.glm,data.frame(gre=x),type="resp"),add=TRUE)
points(gre,fitted(gre.glm),pch=20)
plot(gpa,admit)
gpa.glm = glm(admit~gre,family=binomial,UCLAadm)
curve(predict(gpa.glm,data.frame(gpa=x),type="resp"),add=TRUE)
curve(predict(gpa.glm,data.frame(gpa=x),type="resp"),add=TRUE)
points(gpa,fitted(gpa.glm),pch=20)
adm.glm <- glm(admit~gre,gpa,family = binomial)
adm.glm <- glm(admit~gre,gpa,family = binomial,UCLAadm)
adm.glm <- glm(admit~gre+gpa,family = binomial,UCLAadm)
anova(adma.glm)
anova(adm.glm)
plot(adm.glm)
adm.glm <- glm(admit~gre+gpa+rank,family = binomial,UCLAadm)
anova(adm.glm)
pchisq(459,df=394)
1-pchisq(18.8,df=18)
1-pchisq(459,df=394)
summary(adm.glm)
betaCI(adm.glm)
exp(-1.551)
exp(-1.551)-1(*100)
exp(-1.551)-1(x100)
exp(-1.551)-1
(exp(-1.551)-1)*100
# Inspecting the p-values of the summary table, we see all p-values are below 0.05 which means
# all predictors are useful.
# From the regression conefficients we can calculate their effect on the model for each unit increase while
# holding the other variables constant.
# rank2 is -0.675 units different from rank1, and so
(exp(-0.675)-1)*100
# Calculate odds ratios and CIs
exp(cbind(OR = coef(adm.glm), confint(adm.glm)))
