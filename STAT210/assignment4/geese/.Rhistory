options(digits=3, show.signif.stars = F)
source("Rfunctions.R")
geese <- read.table("geese.txt", header = T)
View(geese)
pairs(geese[,c(2,3)], lower.panel=panel.smooth, upper.panel=panel.cor)
pairs(geese[,c(2,3,4)], lower.panel=panel.smooth, upper.panel=panel.cor)
interaction.abc()
attach(geese)
test <- glm(RESPONSE~ATTITUDE+LATERAL, family = binomial)
test <- glm(RESPONSE~ALTITUDE+LATERAL, family = binomial)
summary(test)
anova(test)
test <- glm(RESPONSE~ALTITUDE+LATERAL, family = binomial)
options(digits=3, show.signif.stars = F)
source("Rfunctions.R")
geese <- read.table("geese.txt", header = T)
attach(geese)
test <- glm(RESPONSE~ALTITUDE+LATERAL, family = binomial)
summary(test)
anova(test)
test <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
anova(test)
summary(test)
test <- lm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
test <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial(logit))
anova(test)
test <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
anova(test)
test <- glm(RESPONSE~ALTITUDE+LATERAL, family = binomial)
anova(test)
test <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
anova(test)
test <- glm(RESPONSE~ALTITUDE*LATERAL, family = poisson)
anova(test)
test <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
anova(test)
test <- lm(RESPONSE~ALTITUDE*LATERAL)
anova(test)
test <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
anova(test)
summary(test)
plot(test)
lm(test)
qq(test)
mod <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
summary(mod)
anova(mod)
ALTITUDE<-c(rep(3,5), rep(6,5), rep(9,5), rep(12,5))
LATERAL<-rep(c(0,10,20,30,40),4)
newx<-data.frame(LATERAL, ALTITUDE)
preds<-predict(mod,new =newx,type="response")
prob<-matrix(preds, ncol=4, byrow=F)
colnames(prob)<-c("A3", "A6","A9", "A12")
rownames(prob)<-c("L0","L10","L20","L30","L40")
prob
mod <- glm(RESPONSE~ALTITUDE+LATERAL, family = binomial)
# Creating prediction of response at point newx based on the final model
preds<-predict(mod,new =newx,type="response")
mod <- glm(RESPONSE~ALTITUDE+LATERAL)
mod <- lm(RESPONSE~ALTITUDE+LATERAL)
mod <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
attach(geese)
delete(ALTITUDE)
delete
/help
help
View(test)
rm(ALTITUDE)
rm(LATERAL)
attach(geese)
# Creating new altitude points
ALTITUDE2<-c(rep(3,5), rep(6,5), rep(9,5), rep(12,5))
# Creating new lateral points
LATERAL2<-rep(c(0,10,20,30,40),4)
View(newx)
rm(newx)
# Compiling above alititude and lateral variables into a data frame
newx<-data.frame(LATERAL2, ALTITUDE2)
attach(geese)
pairs(geese[,c(2,3,4)], lower.panel=panel.smooth, upper.panel=panel.cor)
attach(geese)
# Compiling above alititude and lateral variables into a data frame
newx<-data.frame(LATERAL2, ALTITUDE2)
# Creating prediction of response at point newx based on the final model
preds<-predict(mod,new =newx,type="response")
# Creating new altitude points
ALTITUDE<-c(rep(3,5), rep(6,5), rep(9,5), rep(12,5))
# Creating new lateral points
LATERAL<-rep(c(0,10,20,30,40),4)
# Compiling above alititude and lateral variables into a data frame
newx<-data.frame(LATERAL, ALTITUDE)
# Creating prediction of response at point newx based on the final model
preds<-predict(mod,new =newx,type="response")
# Mapping our predictions into a 5x4 matrix
prob<-matrix(preds, ncol=4, byrow=F)
# Naming our matrix rows and columns
colnames(prob)<-c("A3", "A6","A9", "A12")
rownames(prob)<-c("L0","L10","L20","L30","L40")
# Printing our matrix
prob
mod <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
rm(mod)
mod <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
options(digits=3, show.signif.stars = F)
source("Rfunctions.R")
geese <- read.table("geese.txt", header = T)
attach(geese)
geese <- read.table("geese.txt", header = T)
attach(geese)
mod <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
summary(mod)
source("Rfunctions.R")
options(digits=3, show.signif.stars = F)
anova(mod)
# Creating new altitude points
ALTITUDE<-c(rep(3,5), rep(6,5), rep(9,5), rep(12,5))
# Creating new lateral points
LATERAL<-rep(c(0,10,20,30,40),4)
# Compiling above alititude and lateral variables into a data frame
newx<-data.frame(LATERAL, ALTITUDE)
# Creating prediction of response at point newx based on the final model
preds<-predict(mod,new =newx,type="response")
# Mapping our predictions into a 5x4 matrix
prob<-matrix(preds, ncol=4, byrow=F)
# Naming our matrix rows and columns
colnames(prob)<-c("A3", "A6","A9", "A12")
rownames(prob)<-c("L0","L10","L20","L30","L40")
# Printing our matrix
prob
mod <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
rm(ALTITUDE,LATERAL,newx,preds,prob)
mod <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
mod <- glm(RESPONSE~ALTITUDE+LATERAL, family = binomial)
# Creating new altitude points
ALTITUDE<-c(rep(3,5), rep(6,5), rep(9,5), rep(12,5))
# Creating new lateral points
LATERAL<-rep(c(0,10,20,30,40),4)
# Compiling above alititude and lateral variables into a data frame
newx<-data.frame(LATERAL, ALTITUDE)
# Creating prediction of response at point newx based on the final model
preds<-predict(mod,new =newx,type="response")
# Mapping our predictions into a 5x4 matrix
prob<-matrix(preds, ncol=4, byrow=F)
# Naming our matrix rows and columns
colnames(prob)<-c("A3", "A6","A9", "A12")
rownames(prob)<-c("L0","L10","L20","L30","L40")
# Printing our matrix
prob
rm(ALTITUDE,LATERAL,newx,preds,prob)
mod <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
# Creating new altitude points
ALTITUDE<-c(rep(3,5), rep(6,5), rep(9,5), rep(12,5))
# Creating new lateral points
LATERAL<-rep(c(0,10,20,30,40),4)
# Compiling above alititude and lateral variables into a data frame
newx<-data.frame(LATERAL, ALTITUDE)
# Creating prediction of response at point newx based on the final model
preds<-predict(mod,new =newx,type="response")
# Mapping our predictions into a 5x4 matrix
prob<-matrix(preds, ncol=4, byrow=F)
# Naming our matrix rows and columns
colnames(prob)<-c("A3", "A6","A9", "A12")
rownames(prob)<-c("L0","L10","L20","L30","L40")
# Printing our matrix
prob
mod <- glm(RESPONSE~ALTITUDE+LATERAL, family = binomial)
rm(ALTITUDE,LATERAL,newx,preds,prob)
mod <- glm(RESPONSE~ALTITUDE+LATERAL, family = binomial)
anova(mod)
mod <- glm(RESPONSE~ALTITUDE+LATERAL, family = binomial)
anova(mod)
options(digits=3, show.signif.stars = F)
source("Rfunctions.R")
geese <- read.table("geese.txt", header = T)
attach(geese)
mod <- glm(RESPONSE~ALTITUDE+LATERAL, family = binomial)
anova(mod)
summary(mod)
# Creating new altitude points
ALTITUDE<-c(rep(3,5), rep(6,5), rep(9,5), rep(12,5))
# Creating new lateral points
LATERAL<-rep(c(0,10,20,30,40),4)
# Compiling above alititude and lateral variables into a data frame
newx<-data.frame(LATERAL, ALTITUDE)
# Creating prediction of response at point newx based on the final model
preds<-predict(mod,new =newx,type="response")
# Mapping our predictions into a 5x4 matrix
prob<-matrix(preds, ncol=4, byrow=F)
# Naming our matrix rows and columns
colnames(prob)<-c("A3", "A6","A9", "A12")
rownames(prob)<-c("L0","L10","L20","L30","L40")
# Printing our matrix
prob
options(digits=3, show.signif.stars = F)
# Printing our matrix
prob
rm(ALTITUDE,LATERAL,newx,preds,prob)
mod <- glm(RESPONSE~ALTITUDE*LATERAL, family = binomial)
anova(mod)
summary(mod)
pairs(geese[,c(2,3,4)], lower.panel=panel.smooth, upper.panel=panel.cor)
rm(ALTITUDE,LATERAL,newx,preds,prob)
mod <- glm(RESPONSE~ALTITUDE+LATERAL, family = binomial)
# Creating new altitude points
ALTITUDE<-c(rep(3,5), rep(6,5), rep(9,5), rep(12,5))
# Creating new lateral points
LATERAL<-rep(c(0,10,20,30,40),4)
# Compiling above alititude and lateral variables into a data frame
newx<-data.frame(LATERAL, ALTITUDE)
# Creating prediction of response at point newx based on the final model
preds<-predict(mod,new =newx,type="response")
# Mapping our predictions into a 5x4 matrix
prob<-matrix(preds, ncol=4, byrow=F)
# Naming our matrix rows and columns
colnames(prob)<-c("A3", "A6","A9", "A12")
rownames(prob)<-c("L0","L10","L20","L30","L40")
# Printing our matrix
prob
alt<-c(rep(6,5))
lat <- c(3)
alt<-c(6)
newxx <- data.frame(lat,alt)
predict(mod,new=newxx,type="response")
alt<-c(rep(6,5))
lat <- c(3)
newxx <- data.frame(lat,alt)
predict(mod,new=newxx,type="response")
predss<-predict(mod,new=newxx,type="response")
prob
predss
alt<-c(6)
newxx <- data.frame(lat,alt)
predss<-predict(mod,new=newxx,type="response")
predss
summary(predss)
qt(0.025, 4)
qt(0.025, df=4)
